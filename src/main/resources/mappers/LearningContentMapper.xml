<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.selflearningplatformserver.mapper.LearningContentMapper">
    <resultMap id="BaseResultMap" type="com.project.selflearningplatformserver.entity.LearningContent">
        <constructor>
            <idArg column="id" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="subject_id" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="content_uri" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="extension_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="size" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="mime" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, subject_id, content_uri, extension_name, size, mime, name, gmt_create, gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from learning_content
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from learning_content
        where id = #{id,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="com.project.selflearningplatformserver.entity.LearningContent">
        insert into learning_content (id, subject_id, content_uri,
                                      extension_name, size, mime,
                                      name, gmt_create, gmt_modified)
        values (#{id,jdbcType=CHAR}, #{subjectId,jdbcType=CHAR}, #{contentUri,jdbcType=VARCHAR},
                #{extensionName,jdbcType=VARCHAR}, #{size,jdbcType=BIGINT}, #{mime,jdbcType=VARCHAR},
                #{name,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.project.selflearningplatformserver.entity.LearningContent">
        insert into learning_content
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="subjectId != null">
                subject_id,
            </if>
            <if test="contentUri != null">
                content_uri,
            </if>
            <if test="extensionName != null">
                extension_name,
            </if>
            <if test="size != null">
                size,
            </if>
            <if test="mime != null">
                mime,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="subjectId != null">
                #{subjectId,jdbcType=CHAR},
            </if>
            <if test="contentUri != null">
                #{contentUri,jdbcType=VARCHAR},
            </if>
            <if test="extensionName != null">
                #{extensionName,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                #{size,jdbcType=BIGINT},
            </if>
            <if test="mime != null">
                #{mime,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.project.selflearningplatformserver.entity.LearningContent">
        update learning_content
        <set>
            <if test="subjectId != null">
                subject_id = #{subjectId,jdbcType=CHAR},
            </if>
            <if test="contentUri != null">
                content_uri = #{contentUri,jdbcType=VARCHAR},
            </if>
            <if test="extensionName != null">
                extension_name = #{extensionName,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=BIGINT},
            </if>
            <if test="mime != null">
                mime = #{mime,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.project.selflearningplatformserver.entity.LearningContent">
        update learning_content
        set subject_id     = #{subjectId,jdbcType=CHAR},
            content_uri    = #{contentUri,jdbcType=VARCHAR},
            extension_name = #{extensionName,jdbcType=VARCHAR},
            size           = #{size,jdbcType=BIGINT},
            mime           = #{mime,jdbcType=VARCHAR},
            name           = #{name,jdbcType=VARCHAR},
            gmt_create     = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified   = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=CHAR}
    </update>
    <select id="selectAllBySubjectId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from learning_content where subject_id = #{subjectId,jdbcType=VARCHAR}
    </select>
    <select id="countByPrimaryKey" resultType="long">
        select count(0)
        from learning_content
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectAllCanStudy" resultMap="BaseResultMap">
        SELECT *
        FROM learning_content
        WHERE id not in
              (SELECT learning_content_id FROM student_learning WHERE student_id = #{studentId,jdbcType=VARCHAR})
    </select>
</mapper>