<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.selflearningplatformserver.mapper.StudentLearningMapper">
    <resultMap id="BaseResultMap" type="com.project.selflearningplatformserver.entity.StudentLearning">
        <constructor>
            <idArg column="id" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="learning_content_id" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="student_id" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, learning_content_id, student_id, gmt_create, gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student_learning
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from student_learning
        where id = #{id,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="com.project.selflearningplatformserver.entity.StudentLearning">
        insert into student_learning (id, learning_content_id, student_id,
                                      gmt_create, gmt_modified)
        values (#{id,jdbcType=CHAR}, #{learningContentId,jdbcType=CHAR}, #{studentId,jdbcType=CHAR},
                #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.project.selflearningplatformserver.entity.StudentLearning">
        insert into student_learning
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="learningContentId != null">
                learning_content_id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="learningContentId != null">
                #{learningContentId,jdbcType=CHAR},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=CHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.project.selflearningplatformserver.entity.StudentLearning">
        update student_learning
        <set>
            <if test="learningContentId != null">
                learning_content_id = #{learningContentId,jdbcType=CHAR},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=CHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.project.selflearningplatformserver.entity.StudentLearning">
        update student_learning
        set learning_content_id = #{learningContentId,jdbcType=CHAR},
            student_id          = #{studentId,jdbcType=CHAR},
            gmt_create          = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified        = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=CHAR}
    </update>
    <select id="selectAllByStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student_learning where student_id = #{studentId,jdbcType=VARCHAR}
    </select>
    <select id="countByPrimaryKey" resultType="long">
        select count(0)
        from student_learning
        where id = #{id,jdbcType=VARCHAR}
    </select>
</mapper>