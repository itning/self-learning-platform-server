<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.selflearningplatformserver.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.project.selflearningplatformserver.entity.User">
        <constructor>
            <idArg column="id" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="freeze" javaType="java.lang.Boolean" jdbcType="BIT"/>
            <arg column="salt" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="role_id" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, username, password, freeze, salt, role_id, gmt_create, gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from user
        where id = #{id,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="com.project.selflearningplatformserver.entity.User">
        insert into user (id, name, username,
                          password, freeze, salt,
                          role_id, gmt_create, gmt_modified)
        values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{freeze,jdbcType=BIT}, #{salt,jdbcType=VARCHAR},
                #{roleId,jdbcType=CHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.project.selflearningplatformserver.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="freeze != null">
                freeze,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="freeze != null">
                #{freeze,jdbcType=BIT},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=CHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.project.selflearningplatformserver.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="freeze != null">
                freeze = #{freeze,jdbcType=BIT},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=CHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.project.selflearningplatformserver.entity.User">
        update user
        set name         = #{name,jdbcType=VARCHAR},
            username     = #{username,jdbcType=VARCHAR},
            password     = #{password,jdbcType=VARCHAR},
            freeze       = #{freeze,jdbcType=BIT},
            salt         = #{salt,jdbcType=VARCHAR},
            role_id      = #{roleId,jdbcType=CHAR},
            gmt_create   = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=CHAR}
    </update>
    <select id="selectByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user where username = #{username,jdbcType=VARCHAR}
    </select>
</mapper>